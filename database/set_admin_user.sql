-- =====================================================
-- SCRIPT PARA DEFINIR USU√ÅRIO COMO ADMIN
-- Email: contato@conectell.com.br
-- =====================================================

-- Verificar se o usu√°rio existe na tabela users
DO $$
DECLARE
    user_exists BOOLEAN;
    user_id_found UUID;
    current_role TEXT;
BEGIN
    -- Verificar se o usu√°rio existe
    SELECT EXISTS(
        SELECT 1 FROM public.users 
        WHERE email = 'contato@conectell.com.br'
    ) INTO user_exists;
    
    IF user_exists THEN
        -- Obter informa√ß√µes atuais do usu√°rio
        SELECT id, role INTO user_id_found, current_role
        FROM public.users 
        WHERE email = 'contato@conectell.com.br';
        
        RAISE NOTICE 'Usu√°rio encontrado: %', 'contato@conectell.com.br';
        RAISE NOTICE 'ID do usu√°rio: %', user_id_found;
        RAISE NOTICE 'Role atual: %', current_role;
        
        -- Atualizar para admin se n√£o for admin
        IF current_role != 'admin' THEN
            UPDATE public.users 
            SET 
                role = 'admin',
                updated_at = NOW()
            WHERE email = 'contato@conectell.com.br';
            
            RAISE NOTICE 'Usu√°rio % alterado de % para admin com sucesso!', 'contato@conectell.com.br', current_role;
        ELSE
            RAISE NOTICE 'Usu√°rio % j√° √© admin!', 'contato@conectell.com.br';
        END IF;
    ELSE
        RAISE WARNING 'Usu√°rio % n√£o encontrado na tabela users!', 'contato@conectell.com.br';
        RAISE NOTICE 'Verifique se o usu√°rio foi criado atrav√©s do Supabase Auth';
    END IF;
END $$;

-- =====================================================
-- VERIFICA√á√ÉO FINAL
-- =====================================================

-- Mostrar informa√ß√µes finais do usu√°rio
DO $$
DECLARE
    user_info RECORD;
BEGIN
    SELECT id, email, name, role, created_at, updated_at
    INTO user_info
    FROM public.users 
    WHERE email = 'contato@conectell.com.br';
    
    IF FOUND THEN
        RAISE NOTICE '=================================================';
        RAISE NOTICE 'INFORMA√á√ïES DO USU√ÅRIO ADMIN:';
        RAISE NOTICE '=================================================';
        RAISE NOTICE 'ID: %', user_info.id;
        RAISE NOTICE 'Email: %', user_info.email;
        RAISE NOTICE 'Nome: %', user_info.name;
        RAISE NOTICE 'Role: %', user_info.role;
        RAISE NOTICE 'Criado em: %', user_info.created_at;
        RAISE NOTICE 'Atualizado em: %', user_info.updated_at;
        RAISE NOTICE '=================================================';
    END IF;
END $$;

-- =====================================================
-- TESTE DA FUN√á√ÉO is_admin()
-- =====================================================

-- Verificar se a fun√ß√£o is_admin() est√° funcionando
-- (Este teste s√≥ funcionar√° se voc√™ estiver logado como este usu√°rio)
DO $$
BEGIN
    RAISE NOTICE 'Para testar a fun√ß√£o is_admin():';
    RAISE NOTICE '1. Fa√ßa login com contato@conectell.com.br';
    RAISE NOTICE '2. Execute: SELECT public.is_admin();';
    RAISE NOTICE '3. Deve retornar TRUE se tudo estiver correto';
END $$;

-- =====================================================
-- INSTRU√á√ïES ADICIONAIS
-- =====================================================

DO $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE 'PR√ìXIMOS PASSOS:';
    RAISE NOTICE '1. ‚úÖ Usu√°rio definido como admin';
    RAISE NOTICE '2. üîê Fa√ßa login com contato@conectell.com.br';
    RAISE NOTICE '3. üß™ Teste as funcionalidades administrativas';
    RAISE NOTICE '4. üìä Verifique se pode acessar dados de todas as empresas';
    RAISE NOTICE '';
    RAISE NOTICE 'OBSERVA√á√ÉO: Se o usu√°rio n√£o existir, ele precisa:';
    RAISE NOTICE '- Fazer o primeiro login via Supabase Auth';
    RAISE NOTICE '- O trigger handle_new_user() criar√° o registro automaticamente';
    RAISE NOTICE '- Depois execute este script novamente';
END $$;